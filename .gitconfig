[color]
    ui = true
    diff = auto
    status = auto
    branch = auto

[color "branch"]
    current = cyan
    local = normal
    remote = normal dim

[color "diff"]
    meta = normal dim
    frag = cyan
    old = red
    new = green

[color "status"]
    added = green
    changed = yellow
    untracked = normal dim

[user]
    name =
    email =

[status]
    relativePaths = false

[core]
    excludesfile = ~/.gitignore_global
    pager = less -FRSX

[push]
    default = simple

[alias]
    co = checkout
    d  = diff
    dc = diff --cached
    lc = log ORIG_HEAD.. --stat --no-merges
    gl = log --decorate --stat --graph --pretty=format:'%C(yellow reverse) %h %C(reset)%C(cyan) (%an - %ar) %Creset%C(normal dim)%s%n'
    st = status -sb
    serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git
    prune-all = !git remote | xargs -n 1 git remote prune
    whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
    whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
    force = "!sh -c 'git clean -xdf && git reset --hard HEAD' -"

    # Add and remove all changes, note how this alias is calling another alias
    addremove = !git r && git add . --all

    # Show all of my configured aliases
    aliases = !git config --list | grep 'alias\\.' | sed 's/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\ \t => \\2/' | sort

    # For when you made that commit a bit too early, amend
    amend = !git log -n 1 --pretty=tformat:%s%n%n%b | git commit -F - --amend

    # Show all branches
    br = branch -av

    # Show the current branch name (usefull for shell prompts)
    brname = !git branch | grep "^*" | awk '{ print $2 }'

    # Delete a branch
    brdel = branch -D

    # Which files are receiving the most "love"
    churn = !git log --all -M -C --name-only --format='format:' "$@" | sort | grep -v '^$' | uniq -c | sort | awk 'BEGIN {print "count,file"} {print $1 "," $2}'

    # View the log and diff for a commit (previous if no SHA1 provided)
    details = log -n1 -p --format=fuller

    # Save a repo as a tarball
    export = archive -o latest.tar.gz -9 --prefix=latest/

    # Unstage changes from the index
    unstage = reset HEAD --

    # View a pretty git log with branch tree
    g = !git log --graph --pretty=format:'%C(yellow reverse) %h %C(reset) -%C(normal dim)%d%Creset %s %C(cyan)(%an - %cr)%C(reset)' --abbrev-commit --date=relative

    # Return a list of commit SHA1s
    l = "!f() { git log $* | grep '^commit ' | cut -f 2 -d ' '; }; f"

    # Remove deleted files
    r = !git ls-files -z --deleted | xargs -0 git rm

    # Return the repository's root directory (usefull for shell prompts)
    root = rev-parse --show-toplevel

    # Update all submodules
    subup = submodule update --init

    # List all tags
    tags = tag -l

    # Start a new local repository and perform initial commit
    this = !git init && git add . && git commmit -m \"Initial commit.\"

    # Thin out older metadata within the repository, reduceses filesystem footprint
    trim = !git reflog expire --expire=now --all && git gc --prune=now
